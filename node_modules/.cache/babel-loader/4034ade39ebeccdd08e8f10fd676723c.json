{"ast":null,"code":"var _jsxFileName = \"/Users/fjorgedigital/Projects/_LEARNING/React/covid-tracker/src/components/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { fetchDailyData } from '../../api';\nimport styles from './Chart.module.css';\n\nconst Chart = ({\n  data,\n  country\n}) => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchApi = async () => {\n      setDailyData(await fetchDailyData()); // console.log(dailyData);\n    };\n\n    fetchApi();\n  });\n  const lineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        backgroundColor: 'rgba(255, 0, 0, .5)',\n        borderColor: 'red',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }) : null;\n  const barChar = data.confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['rgba(0,0,255, 0.5)', 'rgba(0,255,0, 0.5)', 'rgba(255,0,0, 0.5)']\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current Stat in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["/Users/fjorgedigital/Projects/_LEARNING/React/covid-tracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","Line","Bar","fetchDailyData","styles","Chart","data","country","dailyData","setDailyData","fetchApi","lineChart","length","labels","map","date","datasets","confirmed","label","borderColor","fill","deaths","backgroundColor","barChar","legend","display","title","text","container"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,IAAR,EAAcC,GAAd,QAAwB,iBAAxB;AAEA,SAAQC,cAAR,QAA6B,WAA7B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAAqB;AAC/B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,QAAQ,GAAG,YAAY;AACzBD,MAAAA,YAAY,CAAE,MAAMN,cAAc,EAAtB,CAAZ,CADyB,CAEzB;AACH,KAHD;;AAMAO,IAAAA,QAAQ;AACX,GARQ,CAAT;AAUA,QAAMC,SAAS,GACXH,SAAS,CAACI,MAAV,gBAEI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AACRC,MAAAA,MAAM,EAAEL,SAAS,CAACM,GAAV,CAAc,CAAC;AAACC,QAAAA;AAAD,OAAD,KAAYA,IAA1B,CADA;AAERC,MAAAA,QAAQ,EAAE,CAAC;AACPV,QAAAA,IAAI,EAAEE,SAAS,CAACM,GAAV,CAAc,CAAC;AAACG,UAAAA;AAAD,SAAD,KAAiBA,SAA/B,CADC;AAEPC,QAAAA,KAAK,EAAE,UAFA;AAGPC,QAAAA,WAAW,EAAE,SAHN;AAIPC,QAAAA,IAAI,EAAE;AAJC,OAAD,EAKR;AACEd,QAAAA,IAAI,EAAEE,SAAS,CAACM,GAAV,CAAc,CAAC;AAACO,UAAAA;AAAD,SAAD,KAAcA,MAA5B,CADR;AAEEH,QAAAA,KAAK,EAAE,QAFT;AAGEI,QAAAA,eAAe,EAAE,qBAHnB;AAIEH,QAAAA,WAAW,EAAE,KAJf;AAKEC,QAAAA,IAAI,EAAE;AALR,OALQ;AAFF,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,GAiBI,IAlBR;AAqBA,QAAMG,OAAO,GACTjB,IAAI,CAACW,SAAL,gBAEI,oBAAC,GAAD;AACI,IAAA,IAAI,EAAE;AACFJ,MAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CADN;AAEFG,MAAAA,QAAQ,EAAE,CAAC;AACPE,QAAAA,KAAK,EAAE,QADA;AAEPI,QAAAA,eAAe,EAAE,CAAC,oBAAD,EAAsB,oBAAtB,EAA4C,oBAA5C;AAFV,OAAD;AAFR,KADV;AASI,IAAA,OAAO,EAAE;AACLE,MAAAA,MAAM,EAAE;AAACC,QAAAA,OAAO,EAAC;AAAT,OADH;AAELC,MAAAA,KAAK,EAAE;AAACD,QAAAA,OAAO,EAAE,IAAV;AAAgBE,QAAAA,IAAI,EAAG,mBAAkBpB,OAAQ;AAAjD;AAFF,KATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,GAgBG,IAjBP;AAoBA,sBACI;AAAK,IAAA,SAAS,EAAEH,MAAM,CAACwB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKjB,SADL,CADJ;AAKH,CA3DD;;AA6DA,eAAeN,KAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Line, Bar} from 'react-chartjs-2';\n\nimport {fetchDailyData} from '../../api';\nimport styles from './Chart.module.css';\n\nconst Chart = ({data, country}) => {\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect(() => {\n        const fetchApi = async () => {\n            setDailyData( await fetchDailyData());\n            // console.log(dailyData);\n        }\n        \n\n        fetchApi();\n    });\n\n    const lineChart = (\n        dailyData.length \n        ? (\n            <Line data={{\n                labels: dailyData.map(({date}) => date),\n                datasets: [{\n                    data: dailyData.map(({confirmed}) => confirmed),\n                    label: 'Infected',\n                    borderColor: '#3333ff',\n                    fill: true\n                },{\n                    data: dailyData.map(({deaths}) => deaths),\n                    label: 'Deaths',\n                    backgroundColor: 'rgba(255, 0, 0, .5)',\n                    borderColor: 'red',\n                    fill: true\n                }]\n            }}/>\n        ) : null\n    );\n\n    const barChar = (\n        data.confirmed \n        ? (\n            <Bar \n                data={{\n                    labels: ['Infected', 'Recovered', 'Deaths'],\n                    datasets: [{\n                        label: 'People',\n                        backgroundColor: ['rgba(0,0,255, 0.5)','rgba(0,255,0, 0.5)', 'rgba(255,0,0, 0.5)']\n                    }]\n                }}\n\n                options={{\n                    legend: {display:false},\n                    title: {display: true, text: `Current Stat in ${country}`}\n                }}\n            />\n        ): null\n    );\n\n    return (\n        <div className={styles.container}>\n            {lineChart}\n        </div>\n    );\n}\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}